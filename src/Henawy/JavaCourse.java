/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Henawy;

import AfterCourse.AfterCourse;
import java.awt.Color;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class JavaCourse extends javax.swing.JFrame {

    /**
     * Creates new form JFrame1
     */
    public JavaCourse() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cats = new javax.swing.ButtonGroup();
        Ok = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Subtract = new javax.swing.JButton();
        Power = new javax.swing.JButton();
        If = new javax.swing.JButton();
        Ifelse = new javax.swing.JButton();
        Comp = new javax.swing.JButton();
        input = new javax.swing.JTextField();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        calc = new javax.swing.JButton();
        r3 = new javax.swing.JRadioButton();
        show = new javax.swing.JRadioButton();
        next = new javax.swing.JButton();
        ok2 = new javax.swing.JButton();
        bold2 = new javax.swing.JCheckBox();
        italic2 = new javax.swing.JCheckBox();
        loop = new javax.swing.JButton();
        ta = new javax.swing.JButton();
        A = new javax.swing.JButton();
        pass = new javax.swing.JPasswordField();
        lap1 = new javax.swing.JLabel();
        pas = new javax.swing.JButton();
        random = new javax.swing.JButton();
        asg = new javax.swing.JButton();
        whil = new javax.swing.JButton();
        dw = new javax.swing.JButton();
        game = new javax.swing.JButton();
        pro = new javax.swing.JButton();
        array = new javax.swing.JButton();
        print = new javax.swing.JButton();
        max = new javax.swing.JButton();
        search = new javax.swing.JButton();
        sort = new javax.swing.JButton();
        D2 = new javax.swing.JButton();
        Print = new javax.swing.JButton();
        total = new javax.swing.JButton();
        randomm = new javax.swing.JButton();
        classs = new javax.swing.JButton();
        smlrAVG = new javax.swing.JButton();
        AVG = new javax.swing.JButton();
        thrreading = new javax.swing.JButton();
        xoo = new javax.swing.JButton();
        runtime = new javax.swing.JButton();
        CServer = new javax.swing.JButton();
        NServer = new javax.swing.JButton();
        BCode = new javax.swing.JButton();
        grad = new javax.swing.JButton();
        bnkaccapp = new javax.swing.JButton();
        Sodoko = new javax.swing.JButton();
        aftercourse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Ok.setText("Ok");
        Ok.setToolTipText("");
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Subtract.setText("Subtract");
        Subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtractActionPerformed(evt);
            }
        });

        Power.setText("Power");
        Power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerActionPerformed(evt);
            }
        });

        If.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        If.setText("If");
        If.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IfActionPerformed(evt);
            }
        });

        Ifelse.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Ifelse.setText("Ifelse");
        Ifelse.setRolloverEnabled(true);
        Ifelse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IfelseActionPerformed(evt);
            }
        });

        Comp.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        Comp.setText("Compare 3 No");
        Comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompActionPerformed(evt);
            }
        });

        cats.add(r1);
        r1.setText("1");

        cats.add(r2);
        r2.setText("2");

        calc.setText("Calc");
        calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcActionPerformed(evt);
            }
        });

        cats.add(r3);
        r3.setText("3");

        show.setText("Show");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        next.setText("Next");

        ok2.setText("ok");
        ok2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok2ActionPerformed(evt);
            }
        });

        bold2.setText("Bold");

        italic2.setText("Italic");

        loop.setText("Loop");
        loop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopActionPerformed(evt);
            }
        });

        ta.setText("Time Table");
        ta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taActionPerformed(evt);
            }
        });

        A.setText("*Square");
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        lap1.setText("showw");

        pas.setText("ok");
        pas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasActionPerformed(evt);
            }
        });

        random.setText("Random");
        random.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomActionPerformed(evt);
            }
        });

        asg.setText("Assign");
        asg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asgActionPerformed(evt);
            }
        });

        whil.setText("While");
        whil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whilActionPerformed(evt);
            }
        });

        dw.setText("Do While");
        dw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwActionPerformed(evt);
            }
        });

        game.setText("Game rnd no");
        game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameActionPerformed(evt);
            }
        });

        pro.setText("chs products");
        pro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proActionPerformed(evt);
            }
        });

        array.setText("Array");
        array.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrayActionPerformed(evt);
            }
        });

        print.setText("Aprint");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        max.setText("Max");
        max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        sort.setText("Sort");
        sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortActionPerformed(evt);
            }
        });

        D2.setText("2D Array");
        D2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D2ActionPerformed(evt);
            }
        });

        Print.setText("2D Print");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });

        total.setText("add");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        randomm.setText("Random2");
        randomm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randommActionPerformed(evt);
            }
        });

        classs.setText("Class");
        classs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classsActionPerformed(evt);
            }
        });

        smlrAVG.setText(">Average");
        smlrAVG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smlrAVGActionPerformed(evt);
            }
        });

        AVG.setText("Average");
        AVG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AVGActionPerformed(evt);
            }
        });

        thrreading.setText("Multi Threading");
        thrreading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thrreadingActionPerformed(evt);
            }
        });

        xoo.setText("XOGame");
        xoo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xooActionPerformed(evt);
            }
        });

        runtime.setText("RunTime");
        runtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runtimeActionPerformed(evt);
            }
        });

        CServer.setText("Network Client");
        CServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CServerActionPerformed(evt);
            }
        });

        NServer.setText("NetworkServer");
        NServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NServerActionPerformed(evt);
            }
        });

        BCode.setText("Button Code");
        BCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCodeActionPerformed(evt);
            }
        });

        grad.setText("Gradution Project");
        grad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradActionPerformed(evt);
            }
        });

        bnkaccapp.setText("Bank Account");
        bnkaccapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnkaccappActionPerformed(evt);
            }
        });

        Sodoko.setText("Sodoko");
        Sodoko.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SodokoActionPerformed(evt);
            }
        });

        aftercourse.setText("After Course");
        aftercourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aftercourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(classs)
                .addGap(11, 11, 11))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(r3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calc, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(show)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(next)
                        .addContainerGap())
                    .addComponent(bold2, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lap1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ok2))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(array)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sort))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(whil, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(random, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(If, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Ifelse, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Power, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dw, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(randomm))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pas))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(max)
                            .addComponent(print))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(D2)
                            .addComponent(Print))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(795, 795, 795)
                                .addComponent(smlrAVG))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AVG)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(game, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Comp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(italic2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(thrreading)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(xoo)
                                        .addGap(20, 20, 20))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(runtime)
                                        .addGap(13, 13, 13))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Sodoko)
                                        .addGap(14, 14, 14)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NServer)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(BCode)
                                            .addComponent(CServer)
                                            .addComponent(bnkaccapp)))
                                    .addComponent(grad, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(aftercourse)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(217, 217, 217)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(loop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(asg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(print)
                            .addComponent(D2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(max)
                            .addComponent(Print))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search)
                            .addComponent(total)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(loop, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addComponent(Comp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(game, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(classs))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(If, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Ifelse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Power, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(whil, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dw, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(random, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(randomm)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(array)
                                            .addComponent(sort)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(thrreading)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(228, 228, 228)
                                                .addComponent(xoo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(grad))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(NServer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(runtime)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(CServer)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Sodoko)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(BCode)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(bnkaccapp)
                                                .addGap(76, 76, 76)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(aftercourse)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(smlrAVG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AVG)))
                .addGap(27, 27, 27)
                .addComponent(asg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(r1)
                        .addGap(12, 12, 12)
                        .addComponent(r2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calc))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(show)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(next)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bold2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(italic2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ok2)
                    .addComponent(lap1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        r3.getAccessibleContext().setAccessibleName("r3");
        pro.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed

        Ok.setBackground(Color.green);
        JOptionPane.showMessageDialog(this, "Welcome");
        JOptionPane.showMessageDialog(this, "This is blank program :D\nThe program under development ;p");
        Ok.setText("Sorry :D");
        Ok.setBackground(new Color (255,255,255,60));
                
    }//GEN-LAST:event_OkActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        
        JOptionPane.showMessageDialog(this, "Are you sure you want to exit?");
                System.exit(1);         //prog exit
                this.dispose();        //frame exit

    }//GEN-LAST:event_ExitActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed

        String s=JOptionPane.showInputDialog(this,"Enter First number");
        String s2=JOptionPane.showInputDialog(this,"Enter Second number");
        int x=Integer.parseInt(s);
        int y=Integer.parseInt(s2);
        
        JOptionPane.showMessageDialog(this, x+y);
        
    }//GEN-LAST:event_AddActionPerformed

    private void SubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtractActionPerformed

        String a=JOptionPane.showInputDialog(this, "Enter First Number");
        String a2=JOptionPane.showInputDialog(this, "Enter Second Number");
        int c=Integer.parseInt(a);
        int v=Integer.parseInt(a2);
        
        JOptionPane.showMessageDialog(this, c-v);
        
    }//GEN-LAST:event_SubtractActionPerformed

    private void PowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerActionPerformed

        String e=JOptionPane.showInputDialog(this, "Enter Number");
        String r=JOptionPane.showInputDialog(this , "Enter Power");
        int E=Integer.parseInt(e);
        int R=Integer.parseInt(r);
        double z=Math.pow(E, R);
        
        
        JOptionPane.showMessageDialog(this, z);
        
    }//GEN-LAST:event_PowerActionPerformed

    private void IfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IfActionPerformed

        String t=JOptionPane.showInputDialog(this, "Enter Degree");
        int T=Integer.parseInt(t);
        if (T>=50) 
        {
            If.setBackground(Color.green);
            JOptionPane.showMessageDialog(this, "Passed");
        }
        else
        {
            If.setBackground(Color.red);
            JOptionPane.showMessageDialog(this, "Bad Luck :D Failed...");
        }
        If.setBackground(Color.white);

    }//GEN-LAST:event_IfActionPerformed

    private void IfelseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IfelseActionPerformed

        String y=JOptionPane.showInputDialog(this, "Enter Degree");
        int Y=Integer.parseInt(y);
        if (Y>=95)
        {
            Ifelse.setBackground(Color.green);
            JOptionPane.showMessageDialog(this, "A+");
        }
        else if (Y>=90)
        {
            Ifelse.setBackground(Color.green);
            JOptionPane.showMessageDialog(this, "A");
        }
        else if (Y>=80)
        {
            Ifelse.setBackground(Color.yellow);
            JOptionPane.showMessageDialog(this, "B");
        }
        else if (Y>=70)
        {
            Ifelse.setBackground(Color.yellow);
            JOptionPane.showMessageDialog(this, "C");
        }
        else if (Y>=60)
        {
            Ifelse.setBackground(Color.orange);
            JOptionPane.showMessageDialog(this, "D");
        }
        else if (Y>=50)
        {
            Ifelse.setBackground(Color.orange);
            JOptionPane.showMessageDialog(this, "E");
        }
        else
        {
            Ifelse.setBackground(Color.red);
            JOptionPane.showMessageDialog(this, "F");
        }
        
    }//GEN-LAST:event_IfelseActionPerformed

    private void CompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompActionPerformed

        String y=JOptionPane.showInputDialog(this , "Enter First Number");
        String u=JOptionPane.showInputDialog(this , "Enter Second Number");
        String i=JOptionPane.showInputDialog(this , "Enter Third Number");
        int Y=Integer.parseInt(y);
        int U=Integer.parseInt(u);
        int I=Integer.parseInt(i);
        
        if (Y>U&&Y>I)
        {
            JOptionPane.showMessageDialog(this, Y+"Is Greatest");
        }
        else if (U>Y&&U>I)
        {
            JOptionPane.showMessageDialog(this, U+"Is Greatest");
        }
        else if (I>Y&&I>U)
        {
            JOptionPane.showMessageDialog(this, I+"Is Greatest");
        }
        else if (I==U&&Y<I)
        {
            JOptionPane.showMessageDialog(this, Y+"Is Smaller the rest are Equal");
        }
        else if (I==Y&&Y>U)
        {
            JOptionPane.showMessageDialog(this, U+"Is Smaller the rest are Equal");
        }
        else if (Y==U&&I<Y)
        {
            JOptionPane.showMessageDialog(this, I+"Is Smaller the rest are Equal");
        }
        else 
        {
            JOptionPane.showMessageDialog(this, "All Are Equal");
        }
    }//GEN-LAST:event_CompActionPerformed

    private void calcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcActionPerformed
 
        String o=input.getText();
        int O=Integer.parseInt(o);
        
        if(r1.isSelected())
        {
            JOptionPane.showMessageDialog(this, O*0.1);
        }
        else if(r2.isSelected())
        {
            JOptionPane.showMessageDialog(this, O*0.05);
        }
        else if(r3.isSelected())
        {
            JOptionPane.showMessageDialog(this, O*0.02);
        }
        
    }//GEN-LAST:event_calcActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed

        if(show.isSelected())
            next.setEnabled(true); //enabled or show.setVisible(true); for visability
        else
            next.setEnabled(false);
    }//GEN-LAST:event_showActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        next.setEnabled(false);
    }//GEN-LAST:event_formWindowActivated

    private void ok2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok2ActionPerformed

        String total2="";
        if(bold2.isSelected())
        {
            total2="Bold";
        }
        if(italic2.isSelected())
        {
            if(total2.equals(""))
            total2="Italic";
            else
            total2=total2+"& Italic";
        }
        JOptionPane.showMessageDialog(this, total2);
    }//GEN-LAST:event_ok2ActionPerformed

    private void loopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopActionPerformed

        for(int p=30;p>=0;p=p-3)
        {
            JOptionPane.showMessageDialog(this, "Hello "+p);
        }
    }//GEN-LAST:event_loopActionPerformed

    private void taActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taActionPerformed

        String a=JOptionPane.showInputDialog(this , "Enter Number");
        int A=Integer.parseInt(a);
        String Total="";
        
        for (int P=1;P<=10;P=P+1)
        {
             Total=Total+ A+"x"+P+"="+A*P+"\n";
            
        }
        JOptionPane.showMessageDialog(this, Total);
    }//GEN-LAST:event_taActionPerformed

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed

        String aa=JOptionPane.showInputDialog(this , "Enter W");
        String ab=JOptionPane.showInputDialog(this, "Enter L");
        int AA=Integer.parseInt(aa);
        int AB=Integer.parseInt(ab);
        String total="";
        
        for (int u=0;u<AB;u=u+1)
        {
        for (int i=0;i<AA;i=i+1)
        {
          total=total+"*";
        }
          total=total+"\n";
        }
        JOptionPane.showMessageDialog(this, total);
        
    }//GEN-LAST:event_AActionPerformed

    private void pasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasActionPerformed

        lap1.setText("hello");
    }//GEN-LAST:event_pasActionPerformed

    private void randomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomActionPerformed

        Random r=new Random();
        String total="";
        for (int i=0;i<10;i=i+1)
        {
            int x=r.nextInt(10);
            total=total+x;
        }
        JOptionPane.showMessageDialog(this, total);
    }//GEN-LAST:event_randomActionPerformed

    private void asgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asgActionPerformed

        
        String total="";
        String total2="";
        Random r=new Random();
        
        for(int q=0;q<5;q=q+1)
        {
        for(int w=0;w<=4;w=w+1)
        {
        int ra=r.nextInt(30);
        
        
        for(int i=1;i<=ra;i=i+1)
        
            
        total2=total2+"*";
        
        total= total+ra+"    "+total2+"\n";
        
        total2="";
        
        }
        
        JOptionPane.showMessageDialog(this, total);
        total="";
        }
        
    }//GEN-LAST:event_asgActionPerformed

    private void whilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whilActionPerformed

        String s=JOptionPane.showInputDialog(this , "Enter No");
        int x=Integer.parseInt(s);
        int count=0;
        
        while (x!=0)
        {
            x=x/10;
            count++;
        }
        JOptionPane.showMessageDialog(this, count+" Digits");
    }//GEN-LAST:event_whilActionPerformed

    private void dwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwActionPerformed

        String s=JOptionPane.showInputDialog(this , "Enter No");
        int x=Integer.parseInt(s);
        int count=0;
        
        do
        {
            x=x/10;
            count++;
        }while (x!=0);
        JOptionPane.showMessageDialog(this, count+" Digits");
    }//GEN-LAST:event_dwActionPerformed

    private void gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameActionPerformed

        Random r=new Random();
        int target=r.nextInt(10);
        int x;
        int count=0;
        
        do{
            String s=JOptionPane.showInputDialog(this, "Enter No");
            x=Integer.parseInt(s);
            
            if(x<target)
            {
               JOptionPane.showMessageDialog(this, "Try with greater No.");
            }
            if(x>target)
            {
                JOptionPane.showMessageDialog(this, "Try with smaller No.");
            }
               
            count++;
        }while(x!=target);
        
        if(count<=3){
        JOptionPane.showMessageDialog(this, "Great Job you tried "+count+" time/s");
        }else 
            JOptionPane.showMessageDialog(this, "Sorry you lost \nYou tried "+count+" time/s\nTry again");
    }//GEN-LAST:event_gameActionPerformed

    private void proActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proActionPerformed

        String s=JOptionPane.showInputDialog(this, "Enter your Money");
        int x=Integer.parseInt(s);
        String s1=JOptionPane.showInputDialog(this, "Enter First Product");
        int x1=Integer.parseInt(s1);
        String s2=JOptionPane.showInputDialog(this, "Enter Second Product");
        int x2=Integer.parseInt(s2);
        String s3=JOptionPane.showInputDialog(this, "Enter Third Product");
        int x3=Integer.parseInt(s3);
        
        int c1=0;
        int c2=0;
        int c3=0;
        
        while(x>=x1||x>=x2||x>=x3)
        {
           String se=JOptionPane.showInputDialog(this, "Enter Selection from 0 to 2");
           int c=Integer.parseInt(se);
           
            /*Random r=new Random();
            int c=r.nextInt(2);*/
            
           if(c==0&&x>=x1)
           {
            x=x-x1;
            c1=c1+1;
           }
           else if(c==0&&x<x1)
           {
               JOptionPane.showMessageDialog(this, "Insufficent funds \nPlease choose another product");
           }
           if(c==1&&x>=x2)
           {
            x=x-x2;
            c2=c2+1;
           }
           else if(c==1&&x<x2)
           {
               JOptionPane.showMessageDialog(this, "Insufficent funds \nPlease choose another product");
           }
           if(c==2&&x>=x3)
           {
            x=x-x3;
            c3=c3+1;
           }
           else if(c==2&&x<x3)
           {
               JOptionPane.showMessageDialog(this, "Insufficent funds \nPlease choose another product");
           }
           
        }
        JOptionPane.showMessageDialog(this, "First product x"+c1+"\n"+"Second product x"+c2+"\n"+"Third product x"+c3+"\n");
        
    }//GEN-LAST:event_proActionPerformed
String[] x=new String[10];
    private void arrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrayActionPerformed

        
        
        for(int i=0;i<10;i++)
        {
            String s=JOptionPane.showInputDialog(this, "Enter Input"+i);
            //x[i]=Integer.parseInt(s);
            x[i]=(s);
        }
        
    }//GEN-LAST:event_arrayActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed

        String total="";
         for(int i=0;i<10;i++)
        {
            total=total+x[i]+"\n" ;
        }
        JOptionPane.showMessageDialog(this, total);
        
    }//GEN-LAST:event_printActionPerformed

    private void maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxActionPerformed

        //int max=x[0];
        String max=x[0];
        
        for(int i=1;i<10;i++)
        {
            if(x[i].compareTo(max)>0)
            max=x[i];
        }
        JOptionPane.showMessageDialog(this, max);

    }//GEN-LAST:event_maxActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

        int count=0;
        
        String total="";
        
        String s=JOptionPane.showInputDialog(this, "Enter Input");
        //int t=Integer.parseInt(s);
        
        for(int i=0;i<10;i++)
        {
           if(x[i].contains(s)) // startsWith   contains   endsWith
           {
               total=total+"Found "+x[i]+"\n";
               count++;
           }
        }
        if(count==0)
        {
            total=total+"Didn't find it";
        }
         JOptionPane.showMessageDialog(this, total);
        
        
    }//GEN-LAST:event_searchActionPerformed

    private void sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortActionPerformed

        Arrays.sort(x);
    }//GEN-LAST:event_sortActionPerformed

    int[][] z=new int[5][3];
    
    private void D2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D2ActionPerformed

        
        for(int i=0;i<5;i++)
        {
            for(int o=0;o<3;o++)
            {
            String s=JOptionPane.showInputDialog(this , "Enter No for Row "+i+"Column "+o);
            z[i][o] =Integer.parseInt(s);
            }
        }
        
    }//GEN-LAST:event_D2ActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed

        String total="";
        for(int i=0;i<5;i++)
        {
            
            for(int o=0;o<3;o++)
            {
            total=total+z[i][o]+"   ";
            }
            total=total+"\n";
        }
        JOptionPane.showMessageDialog(this , total);
        
    }//GEN-LAST:event_PrintActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed

        int sum=0;
        String total="";
        
        for(int i=0;i<3;i++)
        {
            
            for(int o=0;o<5;o++)
            {
            sum=sum+z[o][i];
            
            }   
            total=total+sum;
            total=total+"\n";
            sum=0;
        }
        JOptionPane.showMessageDialog(this , total);
    }//GEN-LAST:event_totalActionPerformed

    private void randommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randommActionPerformed

        String total="";
        Random r=new Random();
        
        for(int i=0;i<5;i++)
        {
        int x=r.nextInt();
        char c=(char) x;
        total=total+c;
        }
        
        
        JOptionPane.showMessageDialog(this, total);
    }//GEN-LAST:event_randommActionPerformed

    private void classsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classsActionPerformed

        employee x=new employee();
        
        x.ID=JOptionPane.showInputDialog(this, "Enter ID");
        x.Name=JOptionPane.showInputDialog(this, "Enter Name");
        x.Age=Integer.parseInt(JOptionPane.showInputDialog(this, "Enter Age"));
        x.Salary=Double.parseDouble(JOptionPane.showInputDialog(this, "Enter Salary"));
        double m=x.CalcTax();
        JOptionPane.showMessageDialog(this, m);
        String str=x.Data();
        JOptionPane.showMessageDialog(this, str);
        
    }//GEN-LAST:event_classsActionPerformed

    int[] c= new int[10];
    int count=0;
    int sum=0;
    private void smlrAVGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smlrAVGActionPerformed

        
        String total="";
        
        for(int i=0;i<10;i++)
        {
           if(sum/count<c[i])
           
               total=total+x[i]+"\n";
            
        }
        JOptionPane.showMessageDialog(this, total);
        
    }//GEN-LAST:event_smlrAVGActionPerformed

    private void AVGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AVGActionPerformed

         for(int i=0;i<10;i++)
        {
           String s= JOptionPane.showInputDialog(this , "Enter No "+i);
            c[i]= Integer.parseInt(s); 
            sum=sum+c[i];
            count++;
        }
        JOptionPane.showMessageDialog(this, "Aveage is "+sum/count);
    }//GEN-LAST:event_AVGActionPerformed

    MultiThreading m;
    private void thrreadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thrreadingActionPerformed

        if(m==null)
        m=new MultiThreading();
        m.setVisible(true);
    }//GEN-LAST:event_thrreadingActionPerformed

    XOgame xo;
    private void xooActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xooActionPerformed

        if(xo==null)
            xo=new XOgame();
            xo.setVisible(true);
    }//GEN-LAST:event_xooActionPerformed

    Network n;
    private void NServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NServerActionPerformed

        if(n==null)
        n=new Network();
        n.setVisible(true);
    }//GEN-LAST:event_NServerActionPerformed

    NetwrokClient nc;
    private void CServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CServerActionPerformed

        if(nc==null)
        nc=new NetwrokClient();
        nc.setVisible(true);
    }//GEN-LAST:event_CServerActionPerformed

    Runtime rt;
    private void runtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runtimeActionPerformed

        if(rt==null)
        rt=new Runtime();
        rt.setVisible(true);
    }//GEN-LAST:event_runtimeActionPerformed

    CodeButton cd;
    private void BCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCodeActionPerformed

        if(cd==null)
        cd=new CodeButton();
        cd.setVisible(true);
    }//GEN-LAST:event_BCodeActionPerformed

    Assignment2 grd;
    private void gradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradActionPerformed

        if(grd==null)
        grd=new Assignment2();
        grd.setVisible(true);
    }//GEN-LAST:event_gradActionPerformed

    BankAccapp baa;
    private void bnkaccappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnkaccappActionPerformed

        if(baa==null)
            baa=new BankAccapp();
        baa.setVisible(true);
    }//GEN-LAST:event_bnkaccappActionPerformed

    Assignment1 sod;
    private void SodokoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SodokoActionPerformed

        if(sod==null)
            sod=new Assignment1();
        sod.setVisible(true);
    }//GEN-LAST:event_SodokoActionPerformed
AfterCourse ac;
    private void aftercourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aftercourseActionPerformed

        if(ac==null)
            ac=new AfterCourse();
        ac.setVisible(true);
    }//GEN-LAST:event_aftercourseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JavaCourse().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton AVG;
    private javax.swing.JButton Add;
    private javax.swing.JButton BCode;
    private javax.swing.JButton CServer;
    private javax.swing.JButton Comp;
    private javax.swing.JButton D2;
    private javax.swing.JButton Exit;
    private javax.swing.JButton If;
    private javax.swing.JButton Ifelse;
    private javax.swing.JButton NServer;
    private javax.swing.JButton Ok;
    private javax.swing.JButton Power;
    private javax.swing.JButton Print;
    private javax.swing.JButton Sodoko;
    private javax.swing.JButton Subtract;
    private javax.swing.JButton aftercourse;
    private javax.swing.JButton array;
    private javax.swing.JButton asg;
    private javax.swing.JButton bnkaccapp;
    private javax.swing.JCheckBox bold2;
    private javax.swing.JButton calc;
    private javax.swing.ButtonGroup cats;
    private javax.swing.JButton classs;
    private javax.swing.JButton dw;
    private javax.swing.JButton game;
    private javax.swing.JButton grad;
    private javax.swing.JTextField input;
    private javax.swing.JCheckBox italic2;
    private javax.swing.JLabel lap1;
    private javax.swing.JButton loop;
    private javax.swing.JButton max;
    private javax.swing.JButton next;
    private javax.swing.JButton ok2;
    private javax.swing.JButton pas;
    private javax.swing.JPasswordField pass;
    private javax.swing.JButton print;
    private javax.swing.JButton pro;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JRadioButton r3;
    private javax.swing.JButton random;
    private javax.swing.JButton randomm;
    private javax.swing.JButton runtime;
    private javax.swing.JButton search;
    private javax.swing.JRadioButton show;
    private javax.swing.JButton smlrAVG;
    private javax.swing.JButton sort;
    private javax.swing.JButton ta;
    private javax.swing.JButton thrreading;
    private javax.swing.JButton total;
    private javax.swing.JButton whil;
    private javax.swing.JButton xoo;
    // End of variables declaration//GEN-END:variables
}
